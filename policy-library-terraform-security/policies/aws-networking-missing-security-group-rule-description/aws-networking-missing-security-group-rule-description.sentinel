import "tfplan/v2" as tfplan

param actions default [
	["no-op"],
	["create"],
	["update"],
]

resources = filter tfplan.resource_changes as _, rc {
	rc.type is "aws_security_group_rule" and
		rc.mode is "managed" and
		rc.change.actions in actions
}

violations = filter resources as _, r {
	r.change.after.description is null or
	r.change.after.description is empty
}

outcome = {
	"resource_violations": map violations as _, violation {
		violation.address
	},
}

// --------------------------------------------------------
// ID:          TFS-AWS-0002
// Category:    Networking
// Provider:    hashicorp/aws
// Resource:    aws_security_group_rule
// Violation:   Security Group Rule has missing description
// Severity:    Low
// --------------------------------------------------------
// Solution:
//
// Ensure that all "aws_security_group_rule" resources
// have a "description" argument that describes the
// function of the rule.
// --------------------------------------------------------
// Example:
//
//   resource "aws_security_group_rule" "https" {
//    + description = "HTTPS from VPC"
//      security_group_id = aws_security_group.main.id
//      ...
//   }
// --------------------------------------------------------
denied = rule when outcome.resource_violations is not empty {
	outcome
}

main = rule {
	denied
}
